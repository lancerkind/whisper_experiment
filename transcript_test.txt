Richard Hoonhausen introduces us to Nectar, a framework for doing multi-team software development. You were saying Nexus is the simplest scaling framework. I've studied all of them, and some of them require some serious organizational change, redesign or refactoring. With the Nexus, we just make the assumption that you're using Scrum. So Scrum is in place, working however well it is. We at Scrum.org would prefer that it's professional Scrum being used first. We have a term we use called, nail it before you scale it. But we understand that organizations are where they're at on their journey. And the Nexus framework, if you will, is just sort of an exoskeleton that you can put around the existing Scrum framework in order to have a chance at scaling. It actually sounded similar to LESS. From LESS at the surface level, at least. So it talks about continuous integration for teams. Now I don't know if they were as prescriptive about who should be continuous integrating. And I don't know if it has any of the product definition type things that come with that. So is Nexus prescriptive at all about that continuous integration part? Or is it just saying like, hey, they should be using continuous integration? Take the Scrum guide and realize there's like zero prescriptive guidance in there about how to do the work. There's the events, there's the time box concept, there's definition of done. But ultimately, let the team decide. Let the team decide how they do their work, the dev team that is. Let the Scrum team decide how to self-organize around the work. There's clear roles, clear lines of responsibility. The Nexus has that as well. But we don't make you unlearn anything from Scrum. So if your one team brain says, wow, that's something that the team should decide, then your Nexus brain should say, that's something the Nexus should decide. So for example, if you want to do continuous delivery, which I'm a huge fan of, and I think a scale development effort needs that, especially in today's age, it's still the Nexus's decision. The Scrum teams in the Nexus would need to make sure that they've achieved continuous integration before they've gone to continuous delivery. And they've got their technical excellence down. And they've got their dependencies and their integration issues under control before doing that. But ultimately, we don't care. We have our thoughts that that's a good practice. But let the Nexus decide, and they can inspect where they're at on that journey and adapt accordingly. What is a Nexus? Nexus is our term for a couple things. Well, it's actually the world's term for Androids from the future. Operating systems, accounting, and legal. It's a very overloaded term, but it's a pathway of communications. It's a network structure of communications, per definition. So it works quite well as a name for a scaled framework. But the Nexus framework, we refer to the Scrum teams within the Nexus framework as the Nexus. Just like in single team Scrum, we have three to nine developers, plus a product donor role, plus a Scrum master role. You know, so maximum of 11 people on a Scrum team. We have the same kind of notion of three to nine Scrum teams within the Nexus. Not just because it kind of follows the same pattern as developers in a single team, but Dunbar's number kicks in. And just, you know, managing large meetings and things like that. Dunbar's number is a suggested cognitive limit to the number of people with whom one can maintain stable social relationships. This number was first proposed in the 1990s by British anthropologist Robin Dunbar, who found a correlation between primate brain size and average social groups. Dunbar explained it informally as the number of people you would not feel embarrassed about joining uninvited for a drink if you happen to bump into them in a pub. And we can keep around 100, 150 people in our brain and say, oh, I recognize you. You're the person that did that really nice UX on the handheld app over there. Oh, hey, you're the stakeholder I need to talk to about, you know, the taxation questions about the new sales tax in Idaho or whatever. Are you new to Agile or Scrum? Looking for a fun way to pick up the knowledge to become an Agile team? Go get the novel Agile Noir. It's a dramatic novel about a project manager who needs to transform his teams to become Agile because his life depends on it. This book is available in the U.S. on Amazon. In India on Pothy.com. In China, it's available on my WeChat store. Links are in the show notes. Next episode, Richard Hohenhausen fills in more details about the Nexus framework. The purpose of the Nexus framework, the number one purpose is to The purpose of the Nexus framework, the number one purpose is to
